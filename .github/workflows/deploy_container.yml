name: Deploy-container

on:
  registry_package:
    types:
      - published
    tags:
      - prerelease
      - latest
#  push:
#    branches:
#      - prerelease
#      - main
#    paths:
#      - iaac/ansible/docker-compose.yml
#      - iaac/ansible/playbooks/templates/**
#      - .github/workflows/deploy_container.yml
#      - '!src/**'
#      - '!Cargo.yml'
#      - '!.github/workflows/rust_create_release.yml'
#      - '!.github/workflows/build_and_deploy_container.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy-container:
    environment: ${{ github.event.registry_package.package_version.container_metadata.tag.name == 'prerelease' && 'prerelease' || github.event.registry_package.package_version.container_metadata.tag.name == 'latest' && 'main' }}
    runs-on: ubuntu-20.04
    permissions: write-all
    if: github.event.registry_package.package_version.container_metadata.tag.name == 'latest' || github.event.registry_package.package_version.container_metadata.tag.name == 'prerelease'

    steps:
      - uses: hmarr/debug-action@v2

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

#      - name: "call action"
#        id: last_release
#        uses: InsonusK/get-latest-release@v1.0.1
#        with:
#          myToken: ${{ github.token }}
#          view_top: 1
#          exclude_types: draft ${{ github.environment == 'main' && '|prerelease' || github.environment == 'prerelease' && '|release' }}

      - name: Debug
        run: |
          echo "environment name: ${{ vars.env_name }}"

      - name: Run docker-compose with current docker image on target instance
        run: |
          ansible-galaxy install -r iaac/ansible/roles/requirements.yml
          eval "$(ssh-agent -s)"
          echo -n ${{ secrets.DEPLOY_SSH_KEY }} | base64 -d | ssh-add -
          ansible-playbook --user ${{ secrets.DEPLOY_SSH_USER }} -i iaac/ansible/inventory \
          --limit ${{ github.environment }} \
          iaac/ansible/playbooks/docker-compose.yml --extra-vars "\
          ansible_sudo_pass=\"${{ secrets.DEPLOY_USER_PASSWORD }}\" \
          docker_compose_install_fq_link=\"/usr/bin/docker-compose\" \
          docker_image_version=\"${{ github.event.registry_package.package_version.container_metadata.tag.name }}\" \
          TELEGRAM_BOT_TOKEN=\"${{ secrets.TELEGRAM_BOT_TOKEN }}\" \
          PAYMENT_PROVIDER_TOKEN=\"${{ secrets.PAYMENT_PROVIDER_TOKEN }}\"
          telegram_admin_ids_list=\"${{ vars.TELEGRAM_ADMIN_IDS_LIST }}\"
          github_repository=\"${{ github.repository }}\"
          github_actor=\"${{ github.actor }}\""
